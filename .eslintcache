[{"/Users/tiffany/Desktop/big projects/github-jobs/src/index.js":"1","/Users/tiffany/Desktop/big projects/github-jobs/src/App.js":"2","/Users/tiffany/Desktop/big projects/github-jobs/src/styles/GlobalStyle.js":"3","/Users/tiffany/Desktop/big projects/github-jobs/src/styles/Theme.js":"4","/Users/tiffany/Desktop/big projects/github-jobs/src/styles/Buttons.js":"5","/Users/tiffany/Desktop/big projects/github-jobs/src/components/Header.js":"6","/Users/tiffany/Desktop/big projects/github-jobs/src/components/ToggleModeBtn.js":"7","/Users/tiffany/Desktop/big projects/github-jobs/src/components/SearchBar.js":"8","/Users/tiffany/Desktop/big projects/github-jobs/src/pages/Home.js":"9","/Users/tiffany/Desktop/big projects/github-jobs/src/components/JobCard.js":"10","/Users/tiffany/Desktop/big projects/github-jobs/src/components/JobListings.js":"11"},{"size":341,"mtime":1611118548876,"results":"12","hashOfConfig":"13"},{"size":767,"mtime":1611359525884,"results":"14","hashOfConfig":"13"},{"size":1183,"mtime":1611463512488,"results":"15","hashOfConfig":"13"},{"size":403,"mtime":1611123020060,"results":"16","hashOfConfig":"13"},{"size":911,"mtime":1611449392520,"results":"17","hashOfConfig":"13"},{"size":868,"mtime":1611130066963,"results":"18","hashOfConfig":"13"},{"size":1513,"mtime":1611129893122,"results":"19","hashOfConfig":"13"},{"size":2849,"mtime":1611286435978,"results":"20","hashOfConfig":"13"},{"size":1068,"mtime":1611463217919,"results":"21","hashOfConfig":"13"},{"size":1555,"mtime":1611463631312,"results":"22","hashOfConfig":"13"},{"size":1669,"mtime":1611462823586,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"3zw1kr",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"/Users/tiffany/Desktop/big projects/github-jobs/src/index.js",[],["49","50"],"/Users/tiffany/Desktop/big projects/github-jobs/src/App.js",["51","52"],"import React, { useState } from 'react';\nimport GlobalStyle from './styles/GlobalStyle';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  BrowserRouter,\n} from 'react-router-dom';\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport JobCard from './components/JobCard';\n\nconst App = () => {\n  const [currentMode, setCurrentMode] = useState('light');\n  const changeMode = (toggleStatus) => {\n    let theme = toggleStatus ? 'dark' : 'light';\n    setCurrentMode(theme);\n  }\n  return (\n    <BrowserRouter>\n      <GlobalStyle mode={currentMode}/>\n      <Header changeMode={changeMode}/>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","/Users/tiffany/Desktop/big projects/github-jobs/src/styles/GlobalStyle.js",[],"/Users/tiffany/Desktop/big projects/github-jobs/src/styles/Theme.js",[],"/Users/tiffany/Desktop/big projects/github-jobs/src/styles/Buttons.js",[],"/Users/tiffany/Desktop/big projects/github-jobs/src/components/Header.js",[],"/Users/tiffany/Desktop/big projects/github-jobs/src/components/ToggleModeBtn.js",[],"/Users/tiffany/Desktop/big projects/github-jobs/src/components/SearchBar.js",[],"/Users/tiffany/Desktop/big projects/github-jobs/src/pages/Home.js",["53"],"/Users/tiffany/Desktop/big projects/github-jobs/src/components/JobCard.js",[],"/Users/tiffany/Desktop/big projects/github-jobs/src/components/JobListings.js",["54","55"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { MainLightButton } from '../styles/Buttons';\nimport JobCard from './JobCard';\n\nconst JobListings = ({ totalListings }) => {\n  const [loadMore, setLoadMore] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [currentListings, setCurrentListings] = useState([]);\n  const [listings, setListings] = useState(totalListings);\n\n  // initial page load\n  useEffect(() => {\n    setLoaded(true);\n    if (listings.length > 12) {\n      setLoadMore(true);\n    }\n    setCurrentListings(listings.splice(0, 12));\n  }, []);\n\n  // load more on button click\n  const loadMoreContent = (e) => {\n    if (listings.length <= 12) {\n      setLoadMore(false);\n    }\n    let newListing = [...currentListings, ...listings.splice(0, 12)];\n    setCurrentListings(newListing);\n  };\n\n  return (\n    <Main>\n      {loaded && (\n        <JobSection>\n          {currentListings.map((listing, index) => (\n            <JobCard listing={listing} key={index} />\n          ))}\n        </JobSection>\n      )}\n      {loadMore && (\n        <MainLightButton\n          buttonText=\"Load More\"\n          type=\"button\"\n          onClick={loadMoreContent}\n        />\n      )}\n    </Main>\n  );\n};\n\nconst Main = styled.main`\n  width: 76%;\n  margin: 12rem auto 0;\n  padding: 2.5rem 0 10rem;\n  border: 1px solid red;\n  text-align: center;\n`;\n\nconst JobSection = styled.section`\n  width: 100%;\n  margin-bottom: 5.6rem;\n  display: grid;\n  grid-template-columns: repeat(3, minmax(35rem, 1fr));\n  grid-template-rows: repeat(4, 22.8rem);\n  gap: 4rem 3rem;\n  text-align: left;\n`;\n\nexport default JobListings;\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":4,"column":20,"nodeType":"62","messageId":"63","endLine":4,"endColumn":26},{"ruleId":"60","severity":1,"message":"64","line":11,"column":8,"nodeType":"62","messageId":"63","endLine":11,"endColumn":15},{"ruleId":"65","severity":1,"message":"66","line":32,"column":6,"nodeType":"67","endLine":32,"endColumn":15,"suggestions":"68"},{"ruleId":"60","severity":1,"message":"69","line":10,"column":20,"nodeType":"62","messageId":"63","endLine":10,"endColumn":31},{"ruleId":"65","severity":1,"message":"70","line":19,"column":6,"nodeType":"67","endLine":19,"endColumn":8,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'JobCard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["74"],"'setListings' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listings'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentListings' needs the current value of 'listings'.",["75"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [getData, pageNum]",{"range":"80","text":"81"},"Update the dependencies array to be: [listings]",{"range":"82","text":"83"},[955,964],"[getData, pageNum]",[624,626],"[listings]"]