[{"/Users/tiffany/Desktop/big projects/github-jobs/src/index.js":"1","/Users/tiffany/Desktop/big projects/github-jobs/src/App.js":"2","/Users/tiffany/Desktop/big projects/github-jobs/src/styles/GlobalStyle.js":"3","/Users/tiffany/Desktop/big projects/github-jobs/src/styles/Theme.js":"4","/Users/tiffany/Desktop/big projects/github-jobs/src/styles/Buttons.js":"5","/Users/tiffany/Desktop/big projects/github-jobs/src/components/Header.js":"6","/Users/tiffany/Desktop/big projects/github-jobs/src/components/ToggleModeBtn.js":"7","/Users/tiffany/Desktop/big projects/github-jobs/src/components/SearchBar.js":"8","/Users/tiffany/Desktop/big projects/github-jobs/src/pages/Home.js":"9","/Users/tiffany/Desktop/big projects/github-jobs/src/components/JobCard.js":"10","/Users/tiffany/Desktop/big projects/github-jobs/src/components/JobListings.js":"11","/Users/tiffany/Desktop/big projects/github-jobs/src/components/FormatDate.js":"12","/Users/tiffany/Desktop/big projects/github-jobs/src/pages/Details.js":"13"},{"size":341,"mtime":1611118548876,"results":"14","hashOfConfig":"15"},{"size":839,"mtime":1611633436520,"results":"16","hashOfConfig":"15"},{"size":1779,"mtime":1611638902526,"results":"17","hashOfConfig":"15"},{"size":464,"mtime":1611638641892,"results":"18","hashOfConfig":"15"},{"size":911,"mtime":1611449392520,"results":"19","hashOfConfig":"15"},{"size":868,"mtime":1611130066963,"results":"20","hashOfConfig":"15"},{"size":1513,"mtime":1611129893122,"results":"21","hashOfConfig":"15"},{"size":3469,"mtime":1611632619476,"results":"22","hashOfConfig":"15"},{"size":1212,"mtime":1611631556973,"results":"23","hashOfConfig":"15"},{"size":2102,"mtime":1611638447668,"results":"24","hashOfConfig":"15"},{"size":1657,"mtime":1611629546385,"results":"25","hashOfConfig":"15"},{"size":539,"mtime":1611627283681,"results":"26","hashOfConfig":"15"},{"size":138,"mtime":1611633123872,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"3zw1kr",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/tiffany/Desktop/big projects/github-jobs/src/index.js",[],["58","59"],"/Users/tiffany/Desktop/big projects/github-jobs/src/App.js",["60"],"import React, { useState } from 'react';\nimport GlobalStyle from './styles/GlobalStyle';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  BrowserRouter,\n} from 'react-router-dom';\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport Details from './pages/Details';\n\nconst App = () => {\n  const [currentMode, setCurrentMode] = useState('light');\n  const changeMode = (toggleStatus) => {\n    let theme = toggleStatus ? 'dark' : 'light';\n    setCurrentMode(theme);\n  }\n  return (\n    <BrowserRouter>\n      <GlobalStyle mode={currentMode}/>\n      <Header changeMode={changeMode}/>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/details\">\n          <Details />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","/Users/tiffany/Desktop/big projects/github-jobs/src/styles/GlobalStyle.js",[],"/Users/tiffany/Desktop/big projects/github-jobs/src/styles/Theme.js",[],"/Users/tiffany/Desktop/big projects/github-jobs/src/styles/Buttons.js",[],"/Users/tiffany/Desktop/big projects/github-jobs/src/components/Header.js",[],"/Users/tiffany/Desktop/big projects/github-jobs/src/components/ToggleModeBtn.js",[],"/Users/tiffany/Desktop/big projects/github-jobs/src/components/SearchBar.js",[],"/Users/tiffany/Desktop/big projects/github-jobs/src/pages/Home.js",["61"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport JobListings from '../components/JobListings';\nimport ReactLoading from 'react-loading';\n\nconst Home = () => {\n  // get all posts\n  const [totalListings, setTotalListings] = useState([]);\n  const [finishedLoading, setFinishedLoading] = useState(false);\n  const [pageNum, setPageNum] = useState(0);\n\n  const getData = async () => {\n    try {\n      console.log(pageNum);\n      const data = await axios.get(\n        `https://my-cors-proxy-69.herokuapp.com/jobs.github.com/positions.json?search=developer&page=${pageNum}`\n      );\n      // if length is 50 there might be another page / more listings\n      if (data.data.length === 50) {\n        setPageNum(pageNum + 1);\n      } else {\n        setFinishedLoading(true);\n      }\n      let listings = [...totalListings, ...data.data];\n      setTotalListings(listings);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [pageNum]);\n\n  return finishedLoading ? (\n    <JobListings totalListings={totalListings} />\n  ) : (\n    <ReactLoading type={'bubbles'} color={'#5964E0'} width={80} className=\"loader\"/>\n  );\n};\n\nexport default Home;\n","/Users/tiffany/Desktop/big projects/github-jobs/src/components/JobCard.js",["62"],"/Users/tiffany/Desktop/big projects/github-jobs/src/components/JobListings.js",["63","64"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { MainLightButton } from '../styles/Buttons';\nimport JobCard from './JobCard';\n\nconst JobListings = ({ totalListings }) => {\n  const [loadMore, setLoadMore] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [currentListings, setCurrentListings] = useState([]);\n  const [listings, setListings] = useState(totalListings);\n\n  // initial page load\n  useEffect(() => {\n    setLoaded(true);\n    if (listings.length > 12) {\n      setLoadMore(true);\n    }\n    setCurrentListings(listings.splice(0, 12));\n  }, []);\n\n  // load more on button click\n  const loadMoreContent = (e) => {\n    if (listings.length <= 12) {\n      setLoadMore(false);\n    }\n    let newListing = [...currentListings, ...listings.splice(0, 12)];\n    setCurrentListings(newListing);\n  };\n\n  return (\n    <Main>\n      {loaded && (\n        <JobSection>\n          {currentListings.map((listing, index) => (\n            <JobCard listing={listing} key={index} />\n          ))}\n        </JobSection>\n      )}\n      {loadMore && (\n        <MainLightButton\n          buttonText=\"Load More\"\n          type=\"button\"\n          onClick={loadMoreContent}\n        />\n      )}\n    </Main>\n  );\n};\n\nconst Main = styled.main`\n  max-width: 76%;\n  height: auto;\n  margin: 12rem auto 0;\n  padding: 2.5rem 0 10rem;\n  text-align: center;\n`;\n\nconst JobSection = styled.section`\n  width: 100%;\n  margin-bottom: 5.6rem;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(30rem, 1fr));\n  grid-auto-rows: 22.8rem;\n  gap: 4rem 3rem;\n  text-align: left;\n`;\n\nexport default JobListings;\n","/Users/tiffany/Desktop/big projects/github-jobs/src/components/FormatDate.js",[],"/Users/tiffany/Desktop/big projects/github-jobs/src/pages/Details.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":4,"column":20,"nodeType":"71","messageId":"72","endLine":4,"endColumn":26},{"ruleId":"73","severity":1,"message":"74","line":33,"column":6,"nodeType":"75","endLine":33,"endColumn":15,"suggestions":"76"},{"ruleId":"69","severity":1,"message":"77","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":14},{"ruleId":"69","severity":1,"message":"78","line":10,"column":20,"nodeType":"71","messageId":"72","endLine":10,"endColumn":31},{"ruleId":"73","severity":1,"message":"79","line":19,"column":6,"nodeType":"75","endLine":19,"endColumn":8,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["83"],"'Link' is defined but never used.","'setListings' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listings'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentListings' needs the current value of 'listings'.",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [getData, pageNum]",{"range":"89","text":"90"},"Update the dependencies array to be: [listings]",{"range":"91","text":"92"},[997,1006],"[getData, pageNum]",[624,626],"[listings]"]